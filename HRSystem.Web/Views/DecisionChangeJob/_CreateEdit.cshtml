@using HRSystem.Web.Infrastructure.Extensions
@using HRSystem.Web.Infrastructure
@model  HRSystem.Web.Models.DecisionChangeJobViewModel


@Html.HiddenFor(model => model.DecisionChangeJobID)

@{

    if (Model.Date != null)
    {
        <input id="Datee" hidden value="@Model.Date">

    }
    else
    {
        <input id="Datee" hidden value="1">


    }
    if (Model.LetterDate != null)
    {
        <input id="LetterDatee" hidden value="@Model.LetterDate">

    }
    else
    {

        <input id="LetterDatee" hidden value="1">

    }

    if (Model.StartDate != null)
    {
        <input id="StartDatee" hidden value="@Model.StartDate">

    }
    else
    {

        <input id="StartDatee" hidden value="1">

    }

    if (Model.EmpId != null)
    {
        <input id="EmpIdd" hidden value="@Model.EmpId">

    }
    else
    {

        <input id="EmpIdd" hidden value="1">

    }
    var V = Session["Value"];

}


<input hidden id="IdForPrint" value=@Session["Id"]>

<div class="form-group row">

    @if (V == "Edit")
    {
        <label class="col-md-2 label-control">
            رقم العملية<span class="text-danger">*</span>
        </label>
        <div class="col-md-4">
            @Html.TextBoxFor(a => a.DecisionChangeJobID, new { @id = "DecisionChangeJobID", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DecisionChangeJobID, "", new { @class = "text-danger" })
            <span id="validateColCode" class="text-danger" hidden>عفوا هذا الكود موجود مسبقا</span>
        </div>
    }
    else
    {
        <label hidden class="col-md-2 label-control">
            رقم العملية<span class="text-danger">*</span>
        </label>
        <div hidden class="col-md-4">
            @Html.TextBoxFor(a => a.DecisionChangeJobID, new { @id = "DecisionChangeJobID", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DecisionChangeJobID, "", new { @class = "text-danger" })
            <span id="validateColCode" class="text-danger" hidden>عفوا هذا الكود موجود مسبقا</span>
        </div>

        <label class="col-md-2 label-control">
            رقم العملية<span class="text-danger">*</span>
        </label>
        <div class="col-md-4">

            <input type="text" id="" placeholder=" تلقائي" disabled class="form-control">
        </div>
    }


   



</div>
<div class="form-group row">

    <label class="col-md-2 label-control">
        رقم القرار
    </label>
    <div class="col-md-4">
        @Html.TextBoxFor(model => model.Serial, new { @class = "form-control " })
        @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })


    </div>
    <label class="col-md-2 label-control">
        تاريخ القرار<span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        <div class="input-group-text">
            <i class="la la-calendar"></i>
        </div>
        @Html.TextBoxFor(model => model.DateH, new { @class = "form-control", @Id = "DateH" })
        @Html.TextBoxFor(model => model.Date, new { @class = "hidden", @Id = "Date" })
        @*<span id="validateDate" class="text-danger" hidden>تاريخ الاصدار يجب ان يكون  اقل من اويساوى تاريخ اليوم</span>*@
    </div>
</div>
<div class="form-group row">

    <label class="col-md-2 label-control">
        عدد المرفقات<span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
       
        @Html.TextBoxFor(model => model.EnclosureCount, new { @class = "form-control", @Id = "EnclosureCount" })
        @Html.ValidationMessageFor(model => model.EnclosureCount, "", new { @class = "text-danger" })

    </div>
    <label class="col-md-2 label-control">
        صاحب الصلاحية
    </label>
    <div class="input-group col-md-4">
       
        @Html.DropDownListFor(model => model.Owner, (IEnumerable
       <SelectListItem>)ViewData["OwnerList"], "---اختار---", new { @class = "form-control ", @Id = "OwnerId" })
        @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group row">


    <label class="col-md-2 label-control">
        كود الموظف<span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        @Html.DropDownListFor(model => model.EmpId, (IEnumerable
       <SelectListItem>)ViewData["Empolyee"], "---اختار---", new { @class = "form-control ", @Id = "EmpId" })
        @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
    </div>
    <label class="col-md-2 label-control">
        الاسم
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="EmpName" disabled class="form-control">

    </div>

</div>
<div class="form-group row">
    <label class="col-md-2 label-control">
        الادارة
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="DepartmentName" disabled class="form-control">

    </div>

    <label class="col-md-2 label-control">
        الوظيفة
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="JobName" disabled class="form-control">

    </div>
</div>
<div class="form-group row">
    <label class="col-md-2 label-control">
        الجهه
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="JobLocationName" disabled class="form-control">

    </div>
    <label class="col-md-2 label-control">
        المرتبة
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="ClassID" disabled class="form-control">

    </div>
</div>
<div class="form-group row">
    <label class="col-md-2 label-control">
        تاريخ المباشر
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="ContractDateH" disabled class="form-control">

    </div>

    <label class="col-md-2 label-control">
        الدرجة
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="DegreeID" disabled class="form-control">

    </div>
</div>
<div class="form-group row">
    <label class="col-md-2 label-control">
        الرقم الوظيفي القديم
    </label>
    <div class="col-md-4">
        @Html.TextBoxFor(a => a.OldFormingNumer, new { @id = "OldFormingNumer", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.OldFormingNumer, "", new { @class = "text-danger" })
    </div>
    <label class="col-md-2 label-control">
        الرقم الوظيفي الجديد
    </label>
    <div class="input-group col-md-4">
        @Html.TextBoxFor(a => a.NewFormingNumer, new { @id = "NewFormingNumer", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.NewFormingNumer, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group row">

   

    <label class="col-md-2 label-control">
        رقم الخطاب
    </label>
    <div class="col-md-4">
        @Html.TextBoxFor(model => model.LetterId, new { @class = "form-control " })
        @Html.ValidationMessageFor(model => model.NewFormingNumer, "", new { @class = "text-danger" })


    </div>



</div>

<div class="form-group row">


    <label class="col-md-2 label-control">
        اعتبارا من<span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        <div class="input-group-text">
            <i class="la la-calendar"></i>
        </div>
        @Html.TextBoxFor(model => model.StartDateH, new { @class = "form-control", @Id = "StartDateH" })
        @Html.TextBoxFor(model => model.StartDate, new { @class = "hidden", @Id = "StartDate" })
        @*<span id="validateDate" class="text-danger" hidden>تاريخ الاصدار يجب ان يكون  اقل من اويساوى تاريخ اليوم</span>*@
    </div>

    <label class="col-md-2 label-control">
        البيان
    </label>
    <div class="col-md-4">
        @Html.TextBoxFor(model => model.Notes, new { @class = "form-control " })


    </div>



</div>


<div class="form-group row">

    <label class="col-md-2 label-control">
        تاريخ الخطاب<span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        <div class="input-group-text">
            <i class="la la-calendar"></i>
        </div>
        @Html.TextBoxFor(model => model.LetterDateH, new { @class = "form-control", @Id = "LetterDateH" })
        @Html.TextBoxFor(model => model.LetterDate, new { @class = "hidden", @Id = "LetterDate" })
        @*<span id="validateDate" class="text-danger" hidden>تاريخ الاصدار يجب ان يكون  اقل من اويساوى تاريخ اليوم</span>*@
    </div>

    <label class="col-md-2 label-control">
        جهه الموافقة
    </label>
    <div class="col-md-4">
        @Html.TextBoxFor(model => model.ApprovalDepartmentPlace, new { @class = "form-control " })


    </div>



</div>

<div class="form-group row">


    <label class="col-md-2 label-control">
       الوظيفة الجديدة
    </label>
    <div class="input-group col-md-4">
      
        @Html.DropDownListFor(model => model.JobId, (IEnumerable
       <SelectListItem>)ViewData["FixedJob"], "---اختار---", new { @class = "form-control ", @Id = "JobId" })
        @Html.ValidationMessageFor(model => model.JobId, "", new { @class = "text-danger" })
    </div>

    <label class="col-md-2 label-control">
        رقم المرتبة الجديدة<span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        
        @Html.TextBoxFor(model => model.ClassId, new { @class = "form-control", @Id = "ClassId" })
        @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })

    </div>
</div>


<div class="form-group row">
    <label class="col-md-2 label-control">
        رقم الدرجة الجديدة <span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
       
        @Html.TextBoxFor(model => model.DegreeId, new { @class = "form-control", @Id = "DegreeId" })
        @Html.ValidationMessageFor(model => model.DegreeId, "", new { @class = "text-danger" })

    </div>



    <label class="col-md-2 label-control">
        بناءا علي  <span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
      
        @Html.TextBoxFor(model => model.AccordingTo, new { @class = "form-control", @Id = "AccordingTo" })
        @Html.ValidationMessageFor(model => model.AccordingTo, "", new { @class = "text-danger" })

    </div>
</div>

<div class="form-group row">



  
    <label class="col-md-2 label-control">
        الادارة المنقول لها 
    </label>
    <div class="input-group col-md-4">
       
        @Html.DropDownListFor(model => model.DepartmentID, (IEnumerable
       <SelectListItem>)ViewData["DepartmentList"], "---اختار---", new { @class = "form-control ", @Id = "DepartmentID" })
        @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
    </div>

</div>

<script type="text/javascript">





           $(document).ready(function () {

                 if ($("#EmpIdd").val() == 1 || $("#EmpIdd").val() == null)
                   {
                    $("#EmpId").chosen().change(function () {
                    //$('#carvalidation').attr("hidden",true);
                    $(':input[type="submit"]').prop('disabled',false);
                        $.ajax({
                            data: { id: $("#EmpId").val() },
                            url: '@Url.Action("GetEmployeeData", "DecisionChangeJob")',

                            dataType: 'json',

                            success: function (data) {

                                if (data != null) {

                                    $("#EmpName").val(data.EmpName);
                                    $("#JobName").val(data.JobName);
                                    $("#ClassID").val(data.ClassID);
                                    $("#DegreeID").val(data.DegreeID);
                                    $("#JobLocationName").val(data.JobLocationName);
                                    $("#DepartmentName").val(data.DepartmentName);
                                    $("#ContractDateH").val(data.ContractDateH);
                                }




                            },
                            error: function (ex) {
                                $("#EmpName").val('');
                                $("#JobName").val('');
                                $("#ClassID").val('');
                                $("#DegreeID").val('');
                                $("#JobLocationName").val('');
                                $("#DepartmentName").val('');
                                $("#ContractDateH").val('');
                                Swal.fire({
                                    type: "warning",
                                    title: 'عفوا هذا الموظف ليس له بيانات  ',
                                    //text: 'عفوا هذا الموظف في عهدته سيارة حتي الان',
                                    confirmButtonClass: 'btn btn-Warning',
                                })
                            }
                        });
                        return false;


                 })
                   }
                   else {

                       $.ajax({
                            data: { id: $("#EmpId").val() },
                            url: '@Url.Action("GetEmployeeData", "DecisionChangeJob")',

                            dataType: 'json',

                            success: function (data) {

                                if (data != null) {

                                    $("#EmpName").val(data.EmpName);
                                    $("#JobName").val(data.JobName);
                                    $("#ClassID").val(data.ClassID);
                                    $("#DegreeID").val(data.DegreeID);
                                    $("#JobLocationName").val(data.JobLocationName);
                                    $("#DepartmentName").val(data.DepartmentName);
                                    $("#ContractDateH").val(data.ContractDateH);
                                }



                            },
                           error: function (ex) {
                               $("#EmpName").val('');
                               $("#JobName").val('');
                               $("#ClassID").val('');
                               $("#DegreeID").val('');
                               $("#JobLocationName").val('');
                               $("#DepartmentName").val('');
                               $("#ContractDateH").val('');
                                //Swal.fire({
                                //    type: "warning",
                                //    title: 'عفوا هذا الموظف ليس له بيانات  ',
                                //    //text: 'عفوا هذا الموظف في عهدته سيارة حتي الان',
                                //    confirmButtonClass: 'btn btn-Warning',
                                //})


                            }
                       });

                        $("#EmpId").chosen().change(function () {
                    //$('#carvalidation').attr("hidden",true);
                    $(':input[type="submit"]').prop('disabled',false);
                        $.ajax({
                            data: { id: $("#EmpId").val() },
                            url: '@Url.Action("GetEmployeeData", "DecisionChangeJob")',

                            dataType: 'json',

                            success: function (data) {

                                if (data != null) {

                                    $("#EmpName").val(data.EmpName);
                                    $("#JobName").val(data.JobName);
                                    $("#ClassID").val(data.ClassID);
                                    $("#DegreeID").val(data.DegreeID);
                                    $("#JobLocationName").val(data.JobLocationName);
                                    $("#DepartmentName").val(data.DepartmentName);
                                    $("#ContractDateH").val(data.ContractDateH);
                                }




                            },
                            error: function (ex) {
                                $("#EmpName").val('');
                                $("#JobName").val('');
                                $("#ClassID").val('');
                                $("#DegreeID").val('');
                                $("#JobLocationName").val('');
                                $("#DepartmentName").val('');
                                $("#ContractDateH").val('');
                                Swal.fire({
                                    type: "warning",
                                    title: 'عفوا هذا الموظف ليس له بيانات  ',
                                    //text: 'عفوا هذا الموظف في عهدته سيارة حتي الان',
                                    confirmButtonClass: 'btn btn-Warning',
                                })                            }
                        });
                        return false;


                 })
               }
     });

     @* ******************* StartDate_And_H *******************@
                     $(document).ready(function () {

                         if ($("#StartDatee").val() == 1) {

                    $(function () {

                        $('#StartDateH').calendarsPicker({
                            calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                            onSelect: function () {
                                var date = $('#StartDateH').val();


                                var dateFormat = moment(date, 'iYYYY/iM/iD');
                                var toGregoriandate = dateFormat.format('YYYY/MM/D');

                                $('#StartDate').val(toGregoriandate);
                            }

                        });


                        $('#StartDate').calendarsPicker({
                            calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                            onSelect: function () {

                                var date = $('#StartDate').val();
                                var dateFormat = moment(date).format('DD/MM/YYYY')

                                var tohijridate = HijriJS.toHijri(dateFormat, "/");

                                $('#StartDateH').val(tohijridate);
                            }
                        });


                    });
                }
                else {

                    $(function () {

                        $('#StartDateH').calendarsPicker({
                            calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                            onSelect: function () {
                                var date = $('#StartDateH').val();


                                var dateFormat = moment(date, 'iYYYY/iM/iD');
                                var toGregoriandate = dateFormat.format('YYYY/MM/D');

                                $('#StartDate').val(toGregoriandate);
                            }

                        });


                        //$('#AssignmentDate').calendarsPicker({
                        //    calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                        //    onSelect: function () {

                        //        var date = $('#AssignmentDate').val();
                        //        var dateFormat = moment(date).format('DD/MM/YYYY')

                        //        var tohijridate = HijriJS.toHijri(dateFormat, "/");

                        //        $('#AssignmentDateH').val(tohijridate);
                        //    }
                        //});


                    });
                }
            })


     @* ******************* Date_And_H *******************@
    $(document).ready(function () {
        if ($("#Datee").val() == 1) {
            $(function () {

                $('#DateH').calendarsPicker({
                    calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                    onSelect: function () {
                        var date = $('#DateH').val();


                        var dateFormat = moment(date, 'iYYYY/iM/iD');
                        var toGregoriandate = dateFormat.format('YYYY/MM/D');

                        $('#Date').val(toGregoriandate);
                    }

                });


                $('#Date').calendarsPicker({
                    calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                    onSelect: function () {

                        var date = $('#Date').val();
                        var dateFormat = moment(date).format('DD/MM/YYYY')

                        var tohijridate = HijriJS.toHijri(dateFormat, "/");

                        $('#DateH').val(tohijridate);
                    }
                });


            });

        }
        else {
            $(function () {

                $('#DateH').calendarsPicker({
                    calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                    onSelect: function () {
                        var date = $('#DateH').val();


                        var dateFormat = moment(date, 'iYYYY/iM/iD');
                        var toGregoriandate = dateFormat.format('YYYY/MM/D');

                        $('#Date').val(toGregoriandate);
                    }

                });


                //$('#Date').calendarsPicker({
                //    calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                //    onSelect: function () {

                //        var date = $('#Date').val();
                //        var dateFormat = moment(date).format('DD/MM/YYYY')

                //        var tohijridate = HijriJS.toHijri(dateFormat, "/");

                //        $('#DateH').val(tohijridate);
                //    }
                //});


            });
        }
    })

     @* ******************* LetterDatee_And_H *******************@
                     $(document).ready(function () {
                         if ($("#LetterDatee").val() == 1) {
                    $(function () {

                        $('#LetterDateH').calendarsPicker({
                            calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                            onSelect: function () {
                                var date = $('#LetterDateH').val();


                                var dateFormat = moment(date, 'iYYYY/iM/iD');
                                var toGregoriandate = dateFormat.format('YYYY/MM/D');

                                $('#LetterDate').val(toGregoriandate);
                            }

                        });


                        $('#LetterDate').calendarsPicker({
                            calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                            onSelect: function () {

                                var date = $('#LetterDate').val();
                                var dateFormat = moment(date).format('DD/MM/YYYY')

                                var tohijridate = HijriJS.toHijri(dateFormat, "/");

                                $('#LetterDateH').val(tohijridate);
                            }
                        });


                    });

                }
                else {
                    $(function () {

                        $('#LetterDateH').calendarsPicker({
                            calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                            onSelect: function () {
                                var date = $('#LetterDateH').val();


                                var dateFormat = moment(date, 'iYYYY/iM/iD');
                                var toGregoriandate = dateFormat.format('YYYY/MM/D');

                                $('#LetterDate').val(toGregoriandate);
                            }

                        });


                        //$('#Date').calendarsPicker({
                        //    calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                        //    onSelect: function () {

                        //        var date = $('#Date').val();
                        //        var dateFormat = moment(date).format('DD/MM/YYYY')

                        //        var tohijridate = HijriJS.toHijri(dateFormat, "/");

                        //        $('#DateH').val(tohijridate);
                        //    }
                        //});


                    });
                }
            })

           $(function () {
        $("#EmpId").chosen({
            width: "100%"
        });
               $("#OwnerId").chosen({
                   width: "100%"
               });
               $("#JobId").chosen({
                   width: "100%"
               });
               $("#DepartmentID").chosen({
                   width: "100%"
               });



    });


</script>
