@using HRSystem.Web.Infrastructure.Extensions
@using HRSystem.Web.Infrastructure
@model  HRSystem.Web.Models.BirthVacDecViewModel


@Html.HiddenFor(model => model.BirthVacDecSerial)

@{

    if (Model.Date != null)
    {
        <input id="Datee" hidden value="@Model.Date.Value.Date">

    }
    else
    {
        <input id="Datee" hidden value="1">


    }
    if (Model.FromDate != null)
    {
        <input id="FromDatee" hidden value="@Model.FromDate.Value.Date">

    }
    else
    {

        <input id="FromDatee" hidden value="1">

    }


    if (Model.ToDate != null)
    {
        <input id="ToDatee" hidden value="@Model.ToDate.Value.Date">

    }
    else
    {

        <input id="ToDatee" hidden value="1">

    }


    if (Model.EmpId != null)
    {
        <input id="EmpIdd" hidden value="@Model.EmpId">

    }
    else
    {

        <input id="EmpIdd" hidden value="1">

    }


    var V = Session["Value"];
}





<input hidden id="IdForPrint" value=@Session["Id"]>

<div class="form-group row">

    @if (V == "Edit")
    {
        <label class="col-md-2 label-control">
            رقم العملية<span class="text-danger">*</span>
        </label>
        <div class="col-md-4">
            @Html.TextBoxFor(a => a.BirthVacDecSerial, new { @id = "BirthVacDecSerial", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BirthVacDecSerial, "", new { @class = "text-danger" })
            <span id="validateColCode" class="text-danger" hidden>عفوا هذا الكود موجود مسبقا</span>
        </div>
    }
    else
    {
        <label hidden class="col-md-2 label-control">
            رقم العملية<span class="text-danger">*</span>
        </label>
        <div hidden class="col-md-4">
            @Html.TextBoxFor(a => a.BirthVacDecSerial, new { @id = "BirthVacDecSerial", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BirthVacDecSerial, "", new { @class = "text-danger" })
            <span id="validateColCode" class="text-danger" hidden>عفوا هذا الكود موجود مسبقا</span>
        </div>

        <label class="col-md-2 label-control">
            رقم العملية<span class="text-danger">*</span>
        </label>
        <div class="col-md-4">

            <input type="text" id="" placeholder=" تلقائي" disabled class="form-control">
        </div>


    }


    <label class="col-md-2 label-control">
        تاريخ القرار<span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        <div class="input-group-text">
            <i class="la la-calendar"></i>
        </div>
        @Html.TextBoxFor(model => model.DateH, new { @class = "form-control", @Id = "DateH" })
        @Html.TextBoxFor(model => model.Date, new { @class = "hidden", @Id = "Date" })
        @*<span id="validateDate" class="text-danger" hidden>تاريخ الاصدار يجب ان يكون  اقل من اويساوى تاريخ اليوم</span>*@
    </div>


</div>
<div class="form-group row">

    <label class="col-md-2 label-control">
        رقم القرار<span class="text-danger">*</span>
    </label>
    <div class="col-md-4">
        @Html.TextBoxFor(a => a.DecisionNo, new { @id = "DecisionNo", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.DecisionNo, "", new { @class = "text-danger" })
    </div>



    <label class="col-md-2 label-control">
        عدد المرفقات<span class="text-danger">*</span>
    </label>
    <div class="col-md-4">
        @Html.TextBoxFor(a => a.EnclosureCount, new { @id = "EnclosureCount", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EnclosureCount, "", new { @class = "text-danger" })
    </div>



</div>
<div hidden class="form-group row">

 
    <label class="col-md-2 label-control">
        إلى تاريخ
    </label>
    <div class="input-group col-md-4">
        <div class="input-group-text">
            <i class="la la-calendar"></i>
        </div>
        @Html.TextBoxFor(model => model.ToDateH, new { @class = "form-control", @Id = "ToDateH", @readonly = "readonly" })
        @Html.TextBoxFor(model => model.ToDate, new { @class = "hidden", @Id = "ToDate" })
    </div>
</div>

<div class="form-group row">

    <label class="col-md-2 label-control">
        صاحب الصلاحية <span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        @Html.DropDownListFor(model => model.Owner, (IEnumerable
       <SelectListItem>)ViewData["OwnerList"], "---اختار---", new { @class = "form-control ", @Id = "OwnerId" })
        @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
    </div>





</div>
<div class="form-group row">


    <label class="col-md-2 label-control">
        كود الموظف<span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        @Html.DropDownListFor(model => model.EmpId, (IEnumerable
       <SelectListItem>)ViewData["Empolyee"], "---اختار---", new { @class = "form-control ", @Id = "EmpId" })
        @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
    </div>
    <label class="col-md-2 label-control">
        الاسم
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="EmpName" disabled class="form-control">

    </div>

</div>
<div class="form-group row">
    <label class="col-md-2 label-control">
        الادارة
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="DepartmentName" disabled class="form-control">

    </div>

    <label class="col-md-2 label-control">
        الوظيفة
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="JobName" disabled class="form-control">

    </div>
</div>
<div class="form-group row">
    <label class="col-md-2 label-control">
        الجهه
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="JobLocationName" disabled class="form-control">

    </div>
    <label class="col-md-2 label-control">
        المرتبة
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="ClassID" disabled class="form-control">

    </div>
</div>
<div class="form-group row">
    <label class="col-md-2 label-control">
        تاريخ المباشر
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="ContractDateH" disabled class="form-control">

    </div>

    <label class="col-md-2 label-control">
        الدرجة
    </label>
    <div class="input-group col-md-4">
        <input type="text" id="DegreeID" disabled class="form-control">

    </div>
</div>
<div class="form-group row">


    <label class="col-md-2 label-control">
        الموظف البديل <span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        @Html.DropDownListFor(model => model.SubstituteEmpId, (IEnumerable
       <SelectListItem>)ViewData["Empolyee"], "---اختار---", new { @class = "form-control ", @Id = "SubstituteEmpId" })
        @Html.ValidationMessageFor(model => model.SubstituteEmpId, "", new { @class = "text-danger" })
    </div>

</div>
<div class="form-group row">
    <label class="col-md-2 label-control">
        مدة الاجازة<span class="text-danger">*</span>
    </label>
    <div class="col-md-4">
        @Html.TextBoxFor(a => a.VacationPeriod, new { @id = "VacationPeriod", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.VacationPeriod, "", new { @class = "text-danger" })
    </div>

    <label class="col-md-2 label-control">
        اعتبارا من  <span class="text-danger">*</span>
    </label>
    <div class="input-group col-md-4">
        <div class="input-group-text">
            <i class="la la-calendar"></i>
        </div>
        @Html.TextBoxFor(model => model.FromDateH, new { @class = "form-control", @Id = "FromDateH" })
        @Html.TextBoxFor(model => model.FromDate, new { @class = "hidden", @Id = "FromDate" })
        @*<span id="validateDate" class="text-danger" hidden>تاريخ الاصدار يجب ان يكون  اقل من اويساوى تاريخ اليوم</span>*@
    </div>


</div>




<div class="form-group row">

    <label class="col-md-2 label-control">
        البيان<span class="text-danger">*</span>
    </label>
    <div class="col-md-10">
        @Html.TextBoxFor(a => a.Description, new { @id = "Description", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

</div>
<div class="form-group row">

    <label class="col-md-2 label-control">
        ملاحظات
    </label>
    <div class="col-md-10">
        @Html.TextBoxFor(a => a.Notes, new { @id = "Notes", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
    </div>

</div>


<script type="text/javascript">

       $(function () {
             $('#FromDateH').calendarsPicker({
                calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                onSelect: function () {

                    var date = $('#FromDateH').val();
                    var dateFormat = moment(date, 'iYYYY/iM/iD');
                    var toGregoriandate = dateFormat.format('YYYY/MM/D');

                    $('#FromDate').val(toGregoriandate);
                     $.ajax({
                        type: "POST",
                        cache: false,
                        url: '@Url.Action("AddDaysToDate", "DecisionLongLegation")',
                         data: { days: $("#VacationPeriod").val(), date: $('#FromDate').val() },
                        dataType: "json",
                        success: function (result) {

                            $("#ToDate").val(result);
                            var date = new Date(result);
                            var day = date.getDate();
                            var month = date.getMonth() + 1;
                            var year = date.getFullYear();
                            if (month < 10) month = "0" + month;
                            if (day < 10) day = "0" + day;
                            var today = year + "-" + month + "-" + day;
                            $("#ToDate").attr("value", today);

                            var date = $('#ToDate').val();
                            var dateFormat = moment(date).format('DD/MM/YYYY')
                            var tohijridate = HijriJS.toHijri(dateFormat, "/");
                            $('#ToDateH').val(tohijridate);

                        }
                    });

                }

            });

           });

    $("#VacationPeriod").keyup(function () {
                $.ajax({
            type: "POST",
            //contentType: "application/json; charset=utf-8",
            cache: false,
            url: '@Url.Action("AddDaysToDate", "DecisionLongLegation")',
                    data: { days: parseInt($(this).val()), date: $("#FromDate").val()},
             dataType: "json",
            success: function (result) {

                $("#ToDate").val(result);
                /* alert($("#ToDate").val())*/
                var date = new Date(result);


                var day = date.getDate();
                var month = date.getMonth() + 1;
                var year = date.getFullYear();

                if (month < 10) month = "0" + month;
                if (day < 10) day = "0" + day;

                var today = year + "-" + month + "-" + day;
                $("#ToDate").attr("value", today);


                var datee = $('#ToDate').val();
                var dateFormat = moment(datee).format('DD/MM/YYYY')

                var tohijridate = HijriJS.toHijri(dateFormat, "/");

                $('#ToDateH').val(tohijridate);
            }
        });
           });

           $(document).ready(function () {

                 if ($("#EmpIdd").val() == 1 || $("#EmpIdd").val() == null)
                   {
                    $("#EmpId").chosen().change(function () {
                    //$('#carvalidation').attr("hidden",true);
                    $(':input[type="submit"]').prop('disabled',false);
                        $.ajax({
                            data: { id: $("#EmpId").val() },
                            url: '@Url.Action("GetEmployeeData", "BirthVacDec")',

                            dataType: 'json',

                            success: function (data) {

                                if (data != null) {

                                    $("#EmpName").val(data.EmpName);
                                    $("#JobName").val(data.JobName);
                                    $("#ClassID").val(data.ClassID);
                                    $("#DegreeID").val(data.DegreeID);
                                    $("#JobLocationName").val(data.JobLocationName);
                                    $("#DepartmentName").val(data.DepartmentName);
                                    $("#ContractDateH").val(data.ContractDateH);
                                }




                            },
                            error: function (ex) {
                                $("#EmpName").val('');
                                $("#JobName").val('');
                                $("#ClassID").val('');
                                $("#DegreeID").val('');
                                $("#JobLocationName").val('');
                                $("#DepartmentName").val('');
                                $("#ContractDateH").val('');
                                Swal.fire({
                                    type: "warning",
                                    title: 'عفوا هذا الموظف ليس له بيانات  ',
                                    //text: 'عفوا هذا الموظف في عهدته سيارة حتي الان',
                                    confirmButtonClass: 'btn btn-Warning',
                                })
                            }
                        });
                        return false;


                 })
                   }
                   else {

                       $.ajax({
                            data: { id: $("#EmpId").val() },
                            url: '@Url.Action("GetEmployeeData", "BirthVacDec")',

                            dataType: 'json',

                            success: function (data) {

                                if (data != null) {

                                    $("#EmpName").val(data.EmpName);
                                    $("#JobName").val(data.JobName);
                                    $("#ClassID").val(data.ClassID);
                                    $("#DegreeID").val(data.DegreeID);
                                    $("#JobLocationName").val(data.JobLocationName);
                                    $("#DepartmentName").val(data.DepartmentName);
                                    $("#ContractDateH").val(data.ContractDateH);
                                }



                            },
                           error: function (ex) {
                               $("#EmpName").val('');
                               $("#JobName").val('');
                               $("#ClassID").val('');
                               $("#DegreeID").val('');
                               $("#JobLocationName").val('');
                               $("#DepartmentName").val('');
                               $("#ContractDateH").val('');



                            }
                       });

                        $("#EmpId").chosen().change(function () {
                    //$('#carvalidation').attr("hidden",true);
                    $(':input[type="submit"]').prop('disabled',false);
                        $.ajax({
                            data: { id: $("#EmpId").val() },
                            url: '@Url.Action("GetEmployeeData", "BirthVacDec")',

                            dataType: 'json',

                            success: function (data) {

                                if (data != null) {

                                    $("#EmpName").val(data.EmpName);
                                    $("#JobName").val(data.JobName);
                                    $("#ClassID").val(data.ClassID);
                                    $("#DegreeID").val(data.DegreeID);
                                    $("#JobLocationName").val(data.JobLocationName);
                                    $("#DepartmentName").val(data.DepartmentName);
                                    $("#ContractDateH").val(data.ContractDateH);
                                }




                            },
                            error: function (ex) {
                                $("#EmpName").val('');
                                $("#JobName").val('');
                                $("#ClassID").val('');
                                $("#DegreeID").val('');
                                $("#JobLocationName").val('');
                                $("#DepartmentName").val('');
                                $("#ContractDateH").val('');
                                Swal.fire({
                                    type: "warning",
                                    title: 'عفوا هذا الموظف ليس له بيانات  ',
                                    //text: 'عفوا هذا الموظف في عهدته سيارة حتي الان',
                                    confirmButtonClass: 'btn btn-Warning',
                                })                            }
                        });
                        return false;


                 })
               }
     });


     @* ******************* Date_And_H *******************@
                     $(document).ready(function () {
                if ($("#Datee").val() == 1) {
                    $(function () {

                        $('#DateH').calendarsPicker({
                            calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                            onSelect: function () {
                                var date = $('#DateH').val();


                                var dateFormat = moment(date, 'iYYYY/iM/iD');
                                var toGregoriandate = dateFormat.format('YYYY/MM/D');

                                $('#Date').val(toGregoriandate);
                            }

                        });


                        $('#Date').calendarsPicker({
                            calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                            onSelect: function () {

                                var date = $('#Date').val();
                                var dateFormat = moment(date).format('DD/MM/YYYY')

                                var tohijridate = HijriJS.toHijri(dateFormat, "/");

                                $('#DateH').val(tohijridate);
                            }
                        });


                    });

                }
                else {
                    $(function () {

                        $('#DateH').calendarsPicker({
                            calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                            onSelect: function () {
                                var date = $('#DateH').val();


                                var dateFormat = moment(date, 'iYYYY/iM/iD');
                                var toGregoriandate = dateFormat.format('YYYY/MM/D');

                                $('#Date').val(toGregoriandate);
                            }

                        });


                        //$('#Date').calendarsPicker({
                        //    calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                        //    onSelect: function () {

                        //        var date = $('#Date').val();
                        //        var dateFormat = moment(date).format('DD/MM/YYYY')

                        //        var tohijridate = HijriJS.toHijri(dateFormat, "/");

                        //        $('#DateH').val(tohijridate);
                        //    }
                        //});


                    });
                }
            })
     @* ******************* FromDate_And_H *******************@
                     $(document).ready(function () {
                if ($("#FromDatee").val() == 1) {
                    $(function () {

                        $('#FromDateH').calendarsPicker({
                            calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                            onSelect: function () {
                                var date = $('#FromDateH').val();


                                var dateFormat = moment(date, 'iYYYY/iM/iD');
                                var toGregoriandate = dateFormat.format('YYYY/MM/D');

                                $('#FromDate').val(toGregoriandate);
                            }

                        });


                        $('#FromDate').calendarsPicker({
                            calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                            onSelect: function () {

                                var date = $('#FromDate').val();
                                var dateFormat = moment(date).format('DD/MM/YYYY')

                                var tohijridate = HijriJS.toHijri(dateFormat, "/");

                                $('#FromDateH').val(tohijridate);
                            }
                        });


                    });

                }
                else {
                    $(function () {

                        $('#FromDateH').calendarsPicker({
                            calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                            onSelect: function () {
                                var date = $('#FromDateH').val();


                                var dateFormat = moment(date, 'iYYYY/iM/iD');
                                var toGregoriandate = dateFormat.format('YYYY/MM/D');

                                $('#FromDate').val(toGregoriandate);
                            }

                        });


                        //$('#Date').calendarsPicker({
                        //    calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                        //    onSelect: function () {

                        //        var date = $('#Date').val();
                        //        var dateFormat = moment(date).format('DD/MM/YYYY')

                        //        var tohijridate = HijriJS.toHijri(dateFormat, "/");

                        //        $('#DateH').val(tohijridate);
                        //    }
                        //});


                    });
                }
                     })

    @* ******************* ToDate_And_H *******************@
    $(document).ready(function () {

        if ($("#ToDatee").val() == 1) {

            $(function () {

                $('#ToDateH').calendarsPicker({
                    calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                    onSelect: function () {
                        var date = $('#ToDateH').val();


                        var dateFormat = moment(date, 'iYYYY/iM/iD');
                        var toGregoriandate = dateFormat.format('YYYY/MM/D');

                        $('#ToDate').val(toGregoriandate);
                    }

                });


                $('#ToDate').calendarsPicker({
                    calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                    onSelect: function () {

                        var date = $('#ToDate').val();
                        var dateFormat = moment(date).format('DD/MM/YYYY')

                        var tohijridate = HijriJS.toHijri(dateFormat, "/");

                        $('#ToDateH').val(tohijridate);
                    }
                });


            });
        }
        else {

            $(function () {

                $('#ToDateH').calendarsPicker({
                    calendar: $.calendars.instance('ummalqura', 'ar'), showTrigger: '#calImg',
                    onSelect: function () {
                        var date = $('#ToDateH').val();


                        var dateFormat = moment(date, 'iYYYY/iM/iD');
                        var toGregoriandate = dateFormat.format('YYYY/MM/D');

                        $('#ToDate').val(toGregoriandate);
                    }

                });


                //$('#AssignmentDate').calendarsPicker({
                //    calendar: $.calendars.instance('', 'ar'), defaultDate: 'dd/mm/yyyy', format: 'dd/mm/yyyy', selectDefaultDate: true, showTrigger: '#calImg',
                //    onSelect: function () {

                //        var date = $('#AssignmentDate').val();
                //        var dateFormat = moment(date).format('DD/MM/YYYY')

                //        var tohijridate = HijriJS.toHijri(dateFormat, "/");

                //        $('#AssignmentDateH').val(tohijridate);
                //    }
                //});


            });
        }
    })

           $(function () {
        $("#EmpId").chosen({
            width: "100%"
        });
               $("#OwnerId").chosen({
                   width: "100%"
               });

               $("#SubstituteEmpId").chosen({
                   width: "100%"
               });



    });


</script>
