//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HRSystem.Data.Entites.Payroll
{
    using global::System;  using global::System.Diagnostics.CodeAnalysis;
    using global::System.Collections.Generic;
    
    public partial class Employee
    {
        [SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Employee()
        {
            this.AbsenceDeductEmps = new HashSet<AbsenceDeductEmp>();
            this.AppraisalsDetails = new HashSet<AppraisalsDetail>();
            this.ApprovedPayrollEmps = new HashSet<ApprovedPayrollEmp>();
            this.AttendanceGroupsTrxes = new HashSet<AttendanceGroupsTrx>();
            this.BirthVacDecs = new HashSet<BirthVacDec>();
            this.BirthVacDecs1 = new HashSet<BirthVacDec>();
            this.BonusCalculations = new HashSet<BonusCalculation>();
            this.BonusEditEmps = new HashSet<BonusEditEmp>();
            this.Calculations = new HashSet<Calculation>();
            this.CustomPayrollEmps = new HashSet<CustomPayrollEmp>();
            this.DecesionAbsenceNormalDeductions = new HashSet<DecesionAbsenceNormalDeduction>();
            this.DecesionAbsenceNormalDeductions1 = new HashSet<DecesionAbsenceNormalDeduction>();
            this.DecisionAllowances = new HashSet<DecisionAllowance>();
            this.DecisionBonus = new HashSet<DecisionBonu>();
            this.DecisionCancelDecisions = new HashSet<DecisionCancelDecision>();
            this.DecisionChangeJobs = new HashSet<DecisionChangeJob>();
            this.DecisionCompanionVacs = new HashSet<DecisionCompanionVac>();
            this.DecisionDisciplines = new HashSet<DecisionDiscipline>();
            this.DecisionEmployments = new HashSet<DecisionEmployment>();
            this.DecisionEndServices = new HashSet<DecisionEndService>();
            this.DecisionEndStopHands = new HashSet<DecisionEndStopHand>();
            this.DecisionExceptionVacations = new HashSet<DecisionExceptionVacation>();
            this.DecisionExpands = new HashSet<DecisionExpand>();
            this.DecisionLegations = new HashSet<DecisionLegation>();
            this.DecisionMoveEmps = new HashSet<DecisionMoveEmp>();
            this.DecisionNewJobs = new HashSet<DecisionNewJob>();
            this.DecisionNormalVacations = new HashSet<DecisionNormalVacation>();
            this.DecisionNormalVacations1 = new HashSet<DecisionNormalVacation>();
            this.DecisionOutOfDutyGroupFs = new HashSet<DecisionOutOfDutyGroupF>();
            this.DecisionOutOfDutyGroupF2 = new HashSet<DecisionOutOfDutyGroupF2>();
            this.DecisionOutOfDutySpendFs = new HashSet<DecisionOutOfDutySpendF>();
            this.DecisionOutOfDutySpendF2 = new HashSet<DecisionOutOfDutySpendF2>();
            this.DecisionPostmanBonus = new HashSet<DecisionPostmanBonu>();
            this.DecisionReplacementVacations = new HashSet<DecisionReplacementVacation>();
            this.DecisionSingleLegations = new HashSet<DecisionSingleLegation>();
            this.DecisionSingleOutOfDuties = new HashSet<DecisionSingleOutOfDuty>();
            this.DecisionsLists = new HashSet<DecisionsList>();
            this.DecisionStopHands = new HashSet<DecisionStopHand>();
            this.DecisionViolations = new HashSet<DecisionViolation>();
            this.DecisionWorkers = new HashSet<DecisionWorker>();
            this.DecisionWorkerVacations = new HashSet<DecisionWorkerVacation>();
            this.DeservedVacations = new HashSet<DeservedVacation>();
            this.DialysisVecDecs = new HashSet<DialysisVecDec>();
            this.DialysisVecDecs1 = new HashSet<DialysisVecDec>();
            this.EmpDisclaimers = new HashSet<EmpDisclaimer>();
            this.EmpImages = new HashSet<EmpImage>();
            this.Attendances = new HashSet<Attendance>();
            this.EmployeeServices = new HashSet<EmployeeService>();
            this.EmpPermissionsDetails = new HashSet<EmpPermissionsDetail>();
            this.EmpPermissionsRs = new HashSet<EmpPermissionsR>();
            this.EmpPromotions = new HashSet<EmpPromotion>();
            this.EndedEmployees = new HashSet<EndedEmployee>();
            this.FixedJobs = new HashSet<FixedJob>();
            this.GivingBirthVacs = new HashSet<GivingBirthVac>();
            this.LegationApplications = new HashSet<LegationApplication>();
            this.Legations = new HashSet<Legation>();
            this.LegationSpendFs = new HashSet<LegationSpendF>();
            this.LegationSpendF2 = new HashSet<LegationSpendF2>();
            this.LoansTrxes = new HashSet<LoansTrx>();
            this.MarriageVacs = new HashSet<MarriageVac>();
            this.MedicalExaminations = new HashSet<MedicalExamination>();
            this.MotherHoodVacs = new HashSet<MotherHoodVac>();
            this.OutOfDuties = new HashSet<OutOfDuty>();
            this.PromotionQualifieds = new HashSet<PromotionQualified>();
            this.PromotionQualifieds1 = new HashSet<PromotionQualified>();
            this.PromotionQualifieds2 = new HashSet<PromotionQualified>();
            this.PromotionQualifieds3 = new HashSet<PromotionQualified>();
            this.PromotionQualifiedEmps = new HashSet<PromotionQualifiedEmp>();
            this.PublicFundsDecisions = new HashSet<PublicFundsDecision>();
            this.ReplacementVacationBalances = new HashSet<ReplacementVacationBalance>();
            this.SecurityAttSchds = new HashSet<SecurityAttSchd>();
            this.SuddenFPDs = new HashSet<SuddenFPD>();
            this.TmpAttendTrxes = new HashSet<TmpAttendTrx>();
            this.TmpAttendTrx2 = new HashSet<TmpAttendTrx2>();
            this.TrainingTrxes = new HashSet<TrainingTrx>();
            this.TransToBankEmps = new HashSet<TransToBankEmp>();
            this.UserInfoes = new HashSet<UserInfo>();
            this.VacationApplications = new HashSet<VacationApplication>();
            this.VacationSubtractions = new HashSet<VacationSubtraction>();
            this.VacationTransferDEmps = new HashSet<VacationTransferDEmp>();
            this.VacationTrxes = new HashSet<VacationTrx>();
            this.WorkerContracts = new HashSet<WorkerContract>();
            this.WorkersDecisionsEmps = new HashSet<WorkersDecisionsEmp>();
            this.YearlyIncreaseDs = new HashSet<YearlyIncreaseD>();
            this.Bonus1 = new HashSet<Bonu>();
            this.LegationGroups = new HashSet<LegationGroup>();
            this.SendSms = new HashSet<SendSm>();
        }
    
        public int EmpID { get; set; }
        public string EmpName { get; set; }
        public short NatId { get; set; }
        public Nullable<DateTime> BirthDate { get; set; }
        public string BirthDateH { get; set; }
        public string BirthPlace { get; set; }
        public byte ReligionID { get; set; }
        public byte SocialStateID { get; set; }
        public string IDNumber { get; set; }
        public string IDPlace { get; set; }
        public Nullable<DateTime> IDDate { get; set; }
        public string IDDateH { get; set; }
        public Nullable<DateTime> IDEndDate { get; set; }
        public string IDEndDateH { get; set; }
        public Nullable<byte> ContractTypeID { get; set; }
        public string HiringNumber { get; set; }
        public DateTime ContractDate { get; set; }
        public string ContractDateH { get; set; }
        public int JobID { get; set; }
        public string InsuranceNumber { get; set; }
        public Nullable<byte> ClassID { get; set; }
        public Nullable<byte> DegreeID { get; set; }
        public decimal NatureAllow { get; set; }
        public decimal DamageAllow { get; set; }
        public decimal OtherAllow { get; set; }
        public Nullable<int> FormingNumber { get; set; }
        public Nullable<DateTime> ClassDate { get; set; }
        public string ClassDateH { get; set; }
        public Nullable<byte> JobLocationID { get; set; }
        public int DepartmentID { get; set; }
        public byte PaySlipID { get; set; }
        public bool TransToBank { get; set; }
        public Nullable<byte> BankId { get; set; }
        public string AccountNumber { get; set; }
        public Nullable<DateTime> RetirementDate { get; set; }
        public string RetirementDateH { get; set; }
        public Nullable<DateTime> PromotionDate { get; set; }
        public string PromotionDateH { get; set; }
        public Nullable<byte> CertificateID { get; set; }
        public Nullable<DateTime> CertificateDate { get; set; }
        public string CertificateDateH { get; set; }
        public string Specialization { get; set; }
        public string EducationPlace { get; set; }
        public bool StopTransAllow { get; set; }
        public bool StopSalary { get; set; }
        public bool NotActive { get; set; }
        public string NotActiveNote { get; set; }
        public bool StopInsurance { get; set; }
        public Nullable<int> CurrentDepartmentId { get; set; }
        public int AttendanceGroupId { get; set; }
        public bool NoAttendance { get; set; }
        public bool StopBankTransfer { get; set; }
        public decimal RetrievedRetirement { get; set; }
        public string Notes { get; set; }
        public string EmpNameEn { get; set; }
        public byte[] EmployeeImage { get; set; }
        public byte[] EmployeeImg { get; set; }
        public string LicenseNo { get; set; }
        public string LicensePlace { get; set; }
        public Nullable<DateTime> LicenseReleaseDate { get; set; }
        public string LicenseReleaseDateH { get; set; }
        public Nullable<DateTime> LicenseEndDate { get; set; }
        public string LicenseEndDateH { get; set; }
        public Nullable<byte> LicenseTypeId { get; set; }
        public string Phone { get; set; }
        public bool IsDriver { get; set; }
        public Nullable<byte> Type { get; set; }
        public Nullable<int> CarId { get; set; }
        public decimal EmpSalary { get; set; }
        public decimal EmpTransport { get; set; }
        public Nullable<DateTime> EmpCardEndDate { get; set; }
        public string EmpCardEndDateH { get; set; }
        public bool TempStopSalary { get; set; }
        public bool StopNatureAllow { get; set; }
        public decimal MilitaryServiceAllow { get; set; }
        public string BioStarID { get; set; }
        public Nullable<int> CurrentJobID { get; set; }
        public bool Delegated { get; set; }
        public string OldIdNO { get; set; }
        public bool Gender { get; set; }
        public string ClassificationNo { get; set; }
        public string Phone1 { get; set; }
        public string Phone2 { get; set; }
        public string Mobile1 { get; set; }
        public string Mobile2 { get; set; }
        public string Address1 { get; set; }
        public string Address2 { get; set; }
        public string Email { get; set; }
        public string MailBox { get; set; }
        public string MailCode { get; set; }
        public Nullable<short> CityId { get; set; }
        public bool StopHand { get; set; }
        public Nullable<DateTime> LastServiceDate { get; set; }
        public string LastServiceDateH { get; set; }
        public Nullable<DateTime> FixedJobDate { get; set; }
        public string FixedJobDateH { get; set; }
        public bool Legated { get; set; }
        public Nullable<short> LegatePeriod { get; set; }
        public Nullable<DateTime> LegateStart { get; set; }
        public string LegateStartH { get; set; }
        public Nullable<DateTime> LegateEnd { get; set; }
        public string LegateEndH { get; set; }
        public string LegatePlace { get; set; }
        public Nullable<bool> LegateType { get; set; }
        public string PassportNo { get; set; }
        public string PassportPlace { get; set; }
        public Nullable<DateTime> PassportDate { get; set; }
        public string PassportDateH { get; set; }
        public Nullable<DateTime> PassportEndDate { get; set; }
        public string PassportEndDateH { get; set; }
        public Nullable<DateTime> EntranceDate { get; set; }
        public string EntranceDateH { get; set; }
        public Nullable<int> MinistryNo { get; set; }
        public Nullable<DateTime> BirthDateG { get; set; }
        public string BirthDateGH { get; set; }
        public bool StopSupportDeduct { get; set; }
        public bool StopHighCostAllow { get; set; }
        public string MobileCCode { get; set; }
        public bool StopRetirement { get; set; }
        public bool ChargedEmp { get; set; }
        public Nullable<int> ChargedEmpId { get; set; }
        public string ChargedEmpAccountNo { get; set; }
        public string StopSalaryReason { get; set; }
        public decimal Bonus { get; set; }
        public decimal HealthInsurance { get; set; }
        public Nullable<DateTime> StartDate { get; set; }
        public string StartDateH { get; set; }
        public bool Outsider { get; set; }
        public string OutsiderLegationLocation { get; set; }
        public string RetirementAcc { get; set; }
        public string RetrievedRetirementAccountNumber { get; set; }
        public decimal OtherDeduct { get; set; }
        public Nullable<byte> ChargedEmpBankID { get; set; }
        public string TransactionCode { get; set; }
        public string TermCode { get; set; }
        public string EmpSatusCode { get; set; }
        public Nullable<DateTime> TermDate { get; set; }
        public string TermDateH { get; set; }
        public Nullable<short> MajorCode { get; set; }
        public Nullable<short> UniversityCode { get; set; }
        public Nullable<byte> Grade { get; set; }
        public Nullable<int> StartJobId { get; set; }
        public string EltezamResponse { get; set; }
        public string EltezamResponseQlf { get; set; }
        public Nullable<DateTime> OtherDeductDate { get; set; }
    
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AbsenceDeductEmp> AbsenceDeductEmps { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AppraisalsDetail> AppraisalsDetails { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApprovedPayrollEmp> ApprovedPayrollEmps { get; set; }
        public virtual AttendanceGroup AttendanceGroup { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AttendanceGroupsTrx> AttendanceGroupsTrxes { get; set; }
        public virtual Bank Bank { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BirthVacDec> BirthVacDecs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BirthVacDec> BirthVacDecs1 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BonusCalculation> BonusCalculations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BonusEditEmp> BonusEditEmps { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Calculation> Calculations { get; set; }
        public virtual Certificate Certificate { get; set; }
        public virtual ContractType ContractType { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CustomPayrollEmp> CustomPayrollEmps { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecesionAbsenceNormalDeduction> DecesionAbsenceNormalDeductions { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecesionAbsenceNormalDeduction> DecesionAbsenceNormalDeductions1 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionAllowance> DecisionAllowances { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionBonu> DecisionBonus { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionCancelDecision> DecisionCancelDecisions { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionChangeJob> DecisionChangeJobs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionCompanionVac> DecisionCompanionVacs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionDiscipline> DecisionDisciplines { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionEmployment> DecisionEmployments { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionEndService> DecisionEndServices { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionEndStopHand> DecisionEndStopHands { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionExceptionVacation> DecisionExceptionVacations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionExpand> DecisionExpands { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionLegation> DecisionLegations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionMoveEmp> DecisionMoveEmps { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionNewJob> DecisionNewJobs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionNormalVacation> DecisionNormalVacations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionNormalVacation> DecisionNormalVacations1 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionOutOfDutyGroupF> DecisionOutOfDutyGroupFs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionOutOfDutyGroupF2> DecisionOutOfDutyGroupF2 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionOutOfDutySpendF> DecisionOutOfDutySpendFs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionOutOfDutySpendF2> DecisionOutOfDutySpendF2 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionPostmanBonu> DecisionPostmanBonus { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionReplacementVacation> DecisionReplacementVacations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionSingleLegation> DecisionSingleLegations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionSingleOutOfDuty> DecisionSingleOutOfDuties { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionsList> DecisionsLists { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionStopHand> DecisionStopHands { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionViolation> DecisionViolations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionWorker> DecisionWorkers { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DecisionWorkerVacation> DecisionWorkerVacations { get; set; }
        public virtual Degree Degree { get; set; }
        public virtual Department Department { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DeservedVacation> DeservedVacations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DialysisVecDec> DialysisVecDecs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DialysisVecDec> DialysisVecDecs1 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmpDisclaimer> EmpDisclaimers { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmpImage> EmpImages { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Attendance> Attendances { get; set; }
        public virtual JobLocation JobLocation { get; set; }
        public virtual Job Job { get; set; }
        public virtual PaySlip PaySlip { get; set; }
        public virtual EmpStatusCode EmpStatusCode { get; set; }
        public virtual EmpTransaction EmpTransaction { get; set; }
        public virtual Major Major { get; set; }
        public virtual Job Job1 { get; set; }
        public virtual TerminationReason TerminationReason { get; set; }
        public virtual University University { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmployeeService> EmployeeServices { get; set; }
        public virtual EmployeesUserName EmployeesUserName { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmpPermissionsDetail> EmpPermissionsDetails { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmpPermissionsR> EmpPermissionsRs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EmpPromotion> EmpPromotions { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EndedEmployee> EndedEmployees { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FixedJob> FixedJobs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GivingBirthVac> GivingBirthVacs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LegationApplication> LegationApplications { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Legation> Legations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LegationSpendF> LegationSpendFs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LegationSpendF2> LegationSpendF2 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LoansTrx> LoansTrxes { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MarriageVac> MarriageVacs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MedicalExamination> MedicalExaminations { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MotherHoodVac> MotherHoodVacs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OutOfDuty> OutOfDuties { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PromotionQualified> PromotionQualifieds { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PromotionQualified> PromotionQualifieds1 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PromotionQualified> PromotionQualifieds2 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PromotionQualified> PromotionQualifieds3 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PromotionQualifiedEmp> PromotionQualifiedEmps { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PublicFundsDecision> PublicFundsDecisions { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ReplacementVacationBalance> ReplacementVacationBalances { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SecurityAttSchd> SecurityAttSchds { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SuddenFPD> SuddenFPDs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TmpAttendTrx> TmpAttendTrxes { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TmpAttendTrx2> TmpAttendTrx2 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TrainingTrx> TrainingTrxes { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TransToBankEmp> TransToBankEmps { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserInfo> UserInfoes { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<VacationApplication> VacationApplications { get; set; }
        public virtual VacationBalance VacationBalance { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<VacationSubtraction> VacationSubtractions { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<VacationTransferDEmp> VacationTransferDEmps { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<VacationTrx> VacationTrxes { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<WorkerContract> WorkerContracts { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<WorkersDecisionsEmp> WorkersDecisionsEmps { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<YearlyIncreaseD> YearlyIncreaseDs { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Bonu> Bonus1 { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LegationGroup> LegationGroups { get; set; }
        [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SendSm> SendSms { get; set; }
    }
}
